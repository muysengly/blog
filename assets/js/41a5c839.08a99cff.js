"use strict";(self.webpackChunkmy_site=self.webpackChunkmy_site||[]).push([[6049],{1557:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Document 001/013","title":"13. Dictionary","description":"Each key...","source":"@site/docs/Document 001/013.md","sourceDirName":"Document 001","slug":"/Document 001/013","permalink":"/docs/Document 001/013","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"13. Dictionary","description":"Each key...","lead":"","date":"2022-01-25T13:41:39.000Z","lastmod":"2022-01-25T13:41:39.000Z","draft":false,"images":[],"type":"docs","toc":true,"weight":13},"sidebar":"sidebar_doc_001","previous":{"title":"12. Tuples","permalink":"/docs/Document 001/012"},"next":{"title":"14. Date & Time","permalink":"/docs/Document 001/014"}}');var s=i(4848),r=i(8453);const c={title:"13. Dictionary",description:"Each key...",lead:"",date:new Date("2022-01-25T13:41:39.000Z"),lastmod:new Date("2022-01-25T13:41:39.000Z"),draft:!1,images:[],type:"docs",toc:!0,weight:13},d=void 0,a={},l=[{value:"Accessing Values in Dictionary",id:"accessing-values-in-dictionary",level:2},{value:"Updating Dictionary",id:"updating-dictionary",level:2},{value:"Delete Dictionary Elements",id:"delete-dictionary-elements",level:2},{value:"Properties of Dictionary Keys",id:"properties-of-dictionary-keys",level:2},{value:"Built-in Dictionary Functions &amp; Methods",id:"built-in-dictionary-functions--methods",level:2}];function o(e){const t={a:"a",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Each key is separated from its value by a colon (:), the items are separated by commas, and the whole thing is enclosed in curly braces. An empty dictionary without any items is written with just two curly braces, like this: ","."]}),"\n",(0,s.jsx)(t.p,{children:"Keys are unique within a dictionary while values may not be. The values of a dictionary can be of any type, but the keys must be of an immutable data type such as strings, numbers, or tuples."}),"\n",(0,s.jsx)(t.h2,{id:"accessing-values-in-dictionary",children:"Accessing Values in Dictionary"}),"\n",(0,s.jsx)(t.p,{children:"To access dictionary elements, you can use the familiar square brackets along with the key to obtain its value. Following is a simple example \u2212"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/KTBDvD",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}\nprint \"dict['Name']: \", dict['Name']\nprint \"dict['Age']: \", dict['Age']\n"})}),"\n",(0,s.jsx)(t.p,{children:"When the above code is executed, it produces the following result \u2212"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"dict['Name']: Zara\ndict['Age']: 7\n"})}),"\n",(0,s.jsx)(t.p,{children:"If we attempt to access a data item with a key, which is not part of the dictionary, we get an error as follows \u2212"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/pzUOPx",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}\nprint \"dict['Alice']: \", dict['Alice']\n"})}),"\n",(0,s.jsx)(t.p,{children:"When the above code is executed, it produces the following result \u2212"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"dict['Alice']:\nTraceback (most recent call last):\nFile \"test.py\", line 4, in <module>\nprint \"dict['Alice']: \", dict['Alice'];\nKeyError: 'Alice'\n"})}),"\n",(0,s.jsx)(t.h2,{id:"updating-dictionary",children:"Updating Dictionary"}),"\n",(0,s.jsx)(t.p,{children:"You can update a dictionary by adding a new entry or a key-value pair, modifying an existing entry, or deleting an existing entry as shown below in the simple example \u2212"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/porcg2",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}\ndict['Age'] = 8; # update existing entry\ndict['School'] = \"DPS School\"; # Add new entry\n\nprint \"dict['Age']: \", dict['Age']\nprint \"dict['School']: \", dict['School']\n"})}),"\n",(0,s.jsx)(t.p,{children:"When the above code is executed, it produces the following result \u2212"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"dict['Age']: 8\ndict['School']: DPS School\n"})}),"\n",(0,s.jsx)(t.h2,{id:"delete-dictionary-elements",children:"Delete Dictionary Elements"}),"\n",(0,s.jsx)(t.p,{children:"You can either remove individual dictionary elements or clear the entire contents of a dictionary. You can also delete entire dictionary in a single operation."}),"\n",(0,s.jsxs)(t.p,{children:["To explicitly remove an entire dictionary, just use the ",(0,s.jsx)(t.strong,{children:"del"})," statement. Following is a simple example \u2212"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/mbvT73",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}\ndel dict['Name']; # remove entry with key 'Name'\ndict.clear();     # remove all entries in dict\ndel dict ;        # delete entire dictionary\n\nprint \"dict['Age']: \", dict['Age']\nprint \"dict['School']: \", dict['School']\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This produces the following result. Note that an exception is raised because after ",(0,s.jsx)(t.strong,{children:"del dict"})," dictionary does not exist any more \u2212"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"dict['Age']:\nTraceback (most recent call last):\nFile \"test.py\", line 8, in <module>\nprint \"dict['Age']: \", dict['Age'];\nTypeError: 'type' object is unsubscriptable\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note"})," \u2212 del() method is discussed in subsequent section."]}),"\n",(0,s.jsx)(t.h2,{id:"properties-of-dictionary-keys",children:"Properties of Dictionary Keys"}),"\n",(0,s.jsx)(t.p,{children:"Dictionary values have no restrictions. They can be any arbitrary Python object, either standard objects or user-defined objects. However, same is not true for the keys."}),"\n",(0,s.jsx)(t.p,{children:"There are two important points to remember about dictionary keys \u2212"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"(a)"})," More than one entry per key not allowed. Which means no duplicate key is allowed. When duplicate keys encountered during assignment, the last assignment wins. For example \u2212"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/rEJFby",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {'Name': 'Zara', 'Age': 7, 'Name': 'Manni'}\nprint \"dict['Name']: \", dict['Name']\n"})}),"\n",(0,s.jsx)(t.p,{children:"When the above code is executed, it produces the following result \u2212"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"dict['Name']: Manni\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"(b)"})," Keys must be immutable. Which means you can use strings, numbers or tuples as dictionary keys but something like ['key'] is not allowed. Following is a simple example \u2212"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"http://tpcg.io/BLKmXZ",children:"Live Demo"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#!/usr/bin/python\n\ndict = {['Name']: 'Zara', 'Age': 7}\nprint \"dict['Name']: \", dict['Name']\n"})}),"\n",(0,s.jsx)(t.p,{children:"When the above code is executed, it produces the following result \u2212"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"Traceback (most recent call last):\nFile \"test.py\", line 3, in <module>\ndict = {['Name']: 'Zara', 'Age': 7};\nTypeError: unhashable type: 'list'\n"})}),"\n",(0,s.jsx)(t.h2,{id:"built-in-dictionary-functions--methods",children:"Built-in Dictionary Functions & Methods"}),"\n",(0,s.jsx)(t.p,{children:"Python includes the following dictionary functions \u2212"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Sr.No."}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Function with Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_cmp.htm",children:"cmp(dict1, dict2)"}),"Compares elements of both dict."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_len.htm",children:"len(dict)"}),"Gives the total length of the dictionary. This would be equal to the number of items in the dictionary."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"3"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_str.htm",children:"str(dict)"}),"Produces a printable string representation of a dictionary"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_type.htm",children:"type(variable)"}),"Returns the type of the passed variable. If passed variable is dictionary, then it would return a dictionary type."]})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Python includes following dictionary methods \u2212"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Sr.No."}),(0,s.jsx)(t.th,{children:"Methods with Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"1"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_clear.htm",children:"dict.clear()"}),"Removes all elements of dictionary ",(0,s.jsx)(t.em,{children:"dict"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"2"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_copy.htm",children:"dict.copy()"}),"Returns a shallow copy of dictionary ",(0,s.jsx)(t.em,{children:"dict"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"3"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_fromkeys.htm",children:"dict.fromkeys()"}),"Create a new dictionary with keys from seq and values ",(0,s.jsx)(t.em,{children:"set"})," to ",(0,s.jsx)(t.em,{children:"value"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"4"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_get.htm",children:"dict.get(key, default=None)"}),"For ",(0,s.jsx)(t.em,{children:"key"})," key, returns value or default if key not in dictionary"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"5"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_has_key.htm",children:"dict.has_key(key)"}),"Returns ",(0,s.jsx)(t.em,{children:"true"})," if key in dictionary ",(0,s.jsx)(t.em,{children:"dict"}),", ",(0,s.jsx)(t.em,{children:"false"})," otherwise"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"6"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_items.htm",children:"dict.items()"}),"Returns a list of ",(0,s.jsx)(t.em,{children:"dict"}),"'s (key, value) tuple pairs"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"7"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_keys.htm",children:"dict.keys()"}),"Returns list of dictionary dict's keys"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"8"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_setdefault.htm",children:"dict.setdefault(key, default=None)"}),"Similar to get(), but will set dict[key]=default if ",(0,s.jsx)(t.em,{children:"key"})," is not already in dict"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"9"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_update.htm",children:"dict.update(dict2)"}),"Adds dictionary ",(0,s.jsx)(t.em,{children:"dict2"}),"'s key-values pairs to ",(0,s.jsx)(t.em,{children:"dict"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"10"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/python/dictionary_values.htm",children:"dict.values()"}),"Returns list of dictionary ",(0,s.jsx)(t.em,{children:"dict"}),"'s values"]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>d});var n=i(6540);const s={},r=n.createContext(s);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);